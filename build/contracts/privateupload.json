{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cids",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "addcid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cids",
          "type": "string"
        }
      ],
      "name": "removecid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "cids",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pekey",
          "type": "string"
        }
      ],
      "name": "sharewithother",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/PrivateUpload.sol"
  },
  "ast": {
    "absolutePath": "contracts/PrivateUpload.sol",
    "exportedSymbols": {
      "Context": [
        261
      ],
      "Ownable": [
        240
      ],
      "privateupload": [
        136
      ]
    },
    "id": 137,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "C:/Users/sande/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 137,
        "sourceUnit": 241,
        "src": "57:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "privateupload",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 136,
        "linearizedBaseContracts": [
          136
        ],
        "name": "privateupload",
        "nameLocation": "120:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "privateupload.File",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 4,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "169:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "162:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "162:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "CID",
                "nameLocation": "190:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "183:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "183:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "key",
                "nameLocation": "210:3:2",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "203:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "File",
            "nameLocation": "147:4:2",
            "nodeType": "StructDefinition",
            "scope": 136,
            "src": "140:80:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "publickey",
            "nameLocation": "314:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "287:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "295:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "287:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 11,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "306:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "checkcid",
            "nameLocation": "355:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "329:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
              "typeString": "mapping(string => string)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "337:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "329:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                "typeString": "mapping(string => string)"
              },
              "valueType": {
                "id": 15,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "347:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "userscid",
            "nameLocation": "396:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "369:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct privateupload.File[])"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "369:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct privateupload.File[])"
              },
              "valueType": {
                "baseType": {
                  "id": 20,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 19,
                    "name": "File",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9,
                    "src": "388:4:2"
                  },
                  "referencedDeclaration": 9,
                  "src": "388:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_File_$9_storage_ptr",
                    "typeString": "struct privateupload.File"
                  }
                },
                "id": 21,
                "nodeType": "ArrayTypeName",
                "src": "388:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr",
                  "typeString": "struct privateupload.File[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "sharedwithuser",
            "nameLocation": "437:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "410:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct privateupload.File[])"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "418:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "410:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct privateupload.File[])"
              },
              "valueType": {
                "baseType": {
                  "id": 26,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 25,
                    "name": "File",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 9,
                    "src": "429:4:2"
                  },
                  "referencedDeclaration": 9,
                  "src": "429:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_File_$9_storage_ptr",
                    "typeString": "struct privateupload.File"
                  }
                },
                "id": 27,
                "nodeType": "ArrayTypeName",
                "src": "429:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr",
                  "typeString": "struct privateupload.File[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "634:96:2",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 38,
                        "name": "checkcid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "644:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                          "typeString": "mapping(string memory => string storage ref)"
                        }
                      },
                      "id": 40,
                      "indexExpression": {
                        "id": 39,
                        "name": "cids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "653:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "644:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "661:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "644:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "644:21:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "706:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 51,
                            "name": "cids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "712:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 52,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "718:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 49,
                          "name": "File",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "701:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_File_$9_storage_ptr_$",
                            "typeString": "type(struct privateupload.File storage pointer)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "701:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_File_$9_memory_ptr",
                          "typeString": "struct privateupload.File memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_File_$9_memory_ptr",
                          "typeString": "struct privateupload.File memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 44,
                          "name": "userscid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "675:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct privateupload.File storage ref[] storage ref)"
                          }
                        },
                        "id": 47,
                        "indexExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "684:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "684:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "675:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage",
                          "typeString": "struct privateupload.File storage ref[] storage ref"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "675:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr_$_t_struct$_File_$9_storage_$returns$__$bound_to$_t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct privateupload.File storage ref[] storage pointer,struct privateupload.File storage ref)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "675:48:2"
                }
              ]
            },
            "functionSelector": "9754e731",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addcid",
            "nameLocation": "531:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "cids",
                  "nameLocation": "561:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "547:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "589:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "575:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "617:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "603:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:89:2"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:0:2"
            },
            "scope": 136,
            "src": "522:208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "849:340:2",
              "statements": [
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "867:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "859:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "859:9:2"
                },
                {
                  "body": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "928:255:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 82,
                                    "name": "cids",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59,
                                    "src": "990:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 80,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "973:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 81,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "973:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "973:22:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 79,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "963:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "963:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 88,
                                          "name": "userscid",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23,
                                          "src": "1043:8:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct privateupload.File storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 91,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 89,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "1052:3:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 90,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1052:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1043:20:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage",
                                          "typeString": "struct privateupload.File storage ref[] storage ref"
                                        }
                                      },
                                      "id": 93,
                                      "indexExpression": {
                                        "id": 92,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 63,
                                        "src": "1064:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1043:23:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_File_$9_storage",
                                        "typeString": "struct privateupload.File storage ref"
                                      }
                                    },
                                    "id": 94,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "CID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6,
                                    "src": "1043:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 86,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "1026:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "1026:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1026:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 85,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1016:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 96,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1016:56:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "963:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 108,
                        "nodeType": "IfStatement",
                        "src": "942:231:2",
                        "trueBody": {
                          "id": 107,
                          "nodeType": "Block",
                          "src": "1087:86:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "1105:30:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 98,
                                      "name": "userscid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23,
                                      "src": "1112:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct privateupload.File storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 101,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 99,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "1121:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "1121:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1112:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage",
                                      "typeString": "struct privateupload.File storage ref[] storage ref"
                                    }
                                  },
                                  "id": 103,
                                  "indexExpression": {
                                    "id": 102,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63,
                                    "src": "1133:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1112:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_File_$9_storage",
                                    "typeString": "struct privateupload.File storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 105,
                              "nodeType": "ExpressionStatement",
                              "src": "1105:30:2"
                            },
                            {
                              "id": 106,
                              "nodeType": "Break",
                              "src": "1153:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 69,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "890:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 70,
                          "name": "userscid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "894:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct privateupload.File storage ref[] storage ref)"
                          }
                        },
                        "id": 73,
                        "indexExpression": {
                          "expression": {
                            "id": 71,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "903:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "903:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "894:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage",
                          "typeString": "struct privateupload.File storage ref[] storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "894:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "890:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "initializationExpression": {
                    "expression": {
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 65,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "883:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "887:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "883:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68,
                    "nodeType": "ExpressionStatement",
                    "src": "883:5:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "923:3:2",
                      "subExpression": {
                        "id": 76,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63,
                        "src": "923:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 78,
                    "nodeType": "ExpressionStatement",
                    "src": "923:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "878:305:2"
                }
              ]
            },
            "functionSelector": "5d808b61",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removecid",
            "nameLocation": "812:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "cids",
                  "nameLocation": "836:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "822:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:20:2"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "849:0:2"
            },
            "scope": 136,
            "src": "803:386:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "1426:77:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 126,
                              "name": "checkcid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1467:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                                "typeString": "mapping(string memory => string storage ref)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "cids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "1476:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1467:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 129,
                            "name": "cids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "1483:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 130,
                            "name": "pekey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 118,
                            "src": "1489:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 125,
                          "name": "File",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "1462:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_File_$9_storage_ptr_$",
                            "typeString": "type(struct privateupload.File storage pointer)"
                          }
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1462:33:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_File_$9_memory_ptr",
                          "typeString": "struct privateupload.File memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_File_$9_memory_ptr",
                          "typeString": "struct privateupload.File memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 121,
                          "name": "sharedwithuser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1436:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_File_$9_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct privateupload.File storage ref[] storage ref)"
                          }
                        },
                        "id": 123,
                        "indexExpression": {
                          "id": 122,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1451:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1436:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_File_$9_storage_$dyn_storage",
                          "typeString": "struct privateupload.File storage ref[] storage ref"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1436:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr_$_t_struct$_File_$9_storage_$returns$__$bound_to$_t_array$_t_struct$_File_$9_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct privateupload.File storage ref[] storage pointer,struct privateupload.File storage ref)"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1436:60:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1436:60:2"
                }
              ]
            },
            "functionSelector": "113607c4",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharewithother",
            "nameLocation": "1319:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1351:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1343:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "cids",
                  "nameLocation": "1379:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1365:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "pekey",
                  "nameLocation": "1407:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1393:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:85:2"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:2"
            },
            "scope": 136,
            "src": "1310:193:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 137,
        "src": "111:1394:2",
        "usedErrors": []
      }
    ],
    "src": "32:1474:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50610771806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063113607c4146100465780635d808b611461005b5780639754e7311461006e575b600080fd5b6100596100543660046104e0565b610081565b005b610059610069366004610562565b6101d3565b61005961007c36600461059f565b6102e4565b60036000846001600160a01b03166001600160a01b0316815260200190815260200160002060405180606001604052806001856040516100c191906105ee565b908152602001604051809103902080546100da90610629565b80601f016020809104026020016040519081016040528092919081815260200182805461010690610629565b80156101535780601f1061012857610100808354040283529160200191610153565b820191906000526020600020905b81548152906001019060200180831161013657829003601f168201915b5050509183525050602080820186905260409091018490528254600181018455600093845292819020825180519394600302909101926101969284920190610367565b5060208281015180516101af9260018501920190610367565b50604082015180516101cb916002840191602090910190610367565b505050505050565b60005b336000908152600260205260409020548110156102e05733600090815260026020526040902080548290811061020e5761020e610663565b906000526020600020906003020160010160405160200161022f9190610679565b604051602081830303815290604052805190602001208260405160200161025691906105ee565b60405160208183030381529060405280519060200120036102ce5733600090815260026020526040902080548290811061029257610292610663565b600091825260208220600390910201906102ac82826103eb565b6102ba6001830160006103eb565b6102c86002830160006103eb565b50505050565b806102d881610714565b9150506101d6565b5050565b816001846040516102f591906105ee565b90815260200160405180910390209080519060200190610316929190610367565b50336000908152600260209081526040808320815160608101835286815280840188905291820185905280546001810182559084529282902081518051929460030290910192610196928492909101905b82805461037390610629565b90600052602060002090601f01602090048101928261039557600085556103db565b82601f106103ae57805160ff19168380011785556103db565b828001600101855582156103db579182015b828111156103db5782518255916020019190600101906103c0565b506103e7929150610428565b5090565b5080546103f790610629565b6000825580601f10610407575050565b601f0160209004906000526020600020908101906104259190610428565b50565b5b808211156103e75760008155600101610429565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261046457600080fd5b813567ffffffffffffffff8082111561047f5761047f61043d565b604051601f8301601f19908116603f011681019082821181831017156104a7576104a761043d565b816040528381528660208588010111156104c057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156104f557600080fd5b83356001600160a01b038116811461050c57600080fd5b9250602084013567ffffffffffffffff8082111561052957600080fd5b61053587838801610453565b9350604086013591508082111561054b57600080fd5b5061055886828701610453565b9150509250925092565b60006020828403121561057457600080fd5b813567ffffffffffffffff81111561058b57600080fd5b61059784828501610453565b949350505050565b6000806000606084860312156105b457600080fd5b833567ffffffffffffffff808211156105cc57600080fd5b6105d887838801610453565b9450602086013591508082111561052957600080fd5b6000825160005b8181101561060f57602081860181015185830152016105f5565b8181111561061e576000828501525b509190910192915050565b600181811c9082168061063d57607f821691505b60208210810361065d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c91508083168061069557607f831692505b602080841082036106b457634e487b7160e01b86526022600452602486fd5b8180156106c857600181146106d957610706565b60ff19861689528489019650610706565b60008a81526020902060005b868110156106fe5781548b8201529085019083016106e5565b505084890196505b509498975050505050505050565b60006001820161073457634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205028015efce36e858ca3b92b32ffa6e9d637408e5f6c732c9e8d70eba09d6ea064736f6c634300080e0033",
  "bytecodeSha1": "05575b361c1d15879edb8a4fe6037dc1bfca0188",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "privateupload",
  "coverageMap": {
    "branches": {
      "2": {
        "privateupload.removecid": {
          "5": [
            963,
            1072,
            false
          ]
        }
      }
    },
    "statements": {
      "2": {
        "privateupload.addcid": {
          "3": [
            644,
            665
          ],
          "4": [
            675,
            723
          ]
        },
        "privateupload.removecid": {
          "1": [
            1105,
            1135
          ],
          "2": [
            923,
            926
          ]
        },
        "privateupload.sharewithother": {
          "0": [
            1436,
            1496
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063113607c4146100465780635d808b611461005b5780639754e7311461006e575b600080fd5b6100596100543660046104e0565b610081565b005b610059610069366004610562565b6101d3565b61005961007c36600461059f565b6102e4565b60036000846001600160a01b03166001600160a01b0316815260200190815260200160002060405180606001604052806001856040516100c191906105ee565b908152602001604051809103902080546100da90610629565b80601f016020809104026020016040519081016040528092919081815260200182805461010690610629565b80156101535780601f1061012857610100808354040283529160200191610153565b820191906000526020600020905b81548152906001019060200180831161013657829003601f168201915b5050509183525050602080820186905260409091018490528254600181018455600093845292819020825180519394600302909101926101969284920190610367565b5060208281015180516101af9260018501920190610367565b50604082015180516101cb916002840191602090910190610367565b505050505050565b60005b336000908152600260205260409020548110156102e05733600090815260026020526040902080548290811061020e5761020e610663565b906000526020600020906003020160010160405160200161022f9190610679565b604051602081830303815290604052805190602001208260405160200161025691906105ee565b60405160208183030381529060405280519060200120036102ce5733600090815260026020526040902080548290811061029257610292610663565b600091825260208220600390910201906102ac82826103eb565b6102ba6001830160006103eb565b6102c86002830160006103eb565b50505050565b806102d881610714565b9150506101d6565b5050565b816001846040516102f591906105ee565b90815260200160405180910390209080519060200190610316929190610367565b50336000908152600260209081526040808320815160608101835286815280840188905291820185905280546001810182559084529282902081518051929460030290910192610196928492909101905b82805461037390610629565b90600052602060002090601f01602090048101928261039557600085556103db565b82601f106103ae57805160ff19168380011785556103db565b828001600101855582156103db579182015b828111156103db5782518255916020019190600101906103c0565b506103e7929150610428565b5090565b5080546103f790610629565b6000825580601f10610407575050565b601f0160209004906000526020600020908101906104259190610428565b50565b5b808211156103e75760008155600101610429565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261046457600080fd5b813567ffffffffffffffff8082111561047f5761047f61043d565b604051601f8301601f19908116603f011681019082821181831017156104a7576104a761043d565b816040528381528660208588010111156104c057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156104f557600080fd5b83356001600160a01b038116811461050c57600080fd5b9250602084013567ffffffffffffffff8082111561052957600080fd5b61053587838801610453565b9350604086013591508082111561054b57600080fd5b5061055886828701610453565b9150509250925092565b60006020828403121561057457600080fd5b813567ffffffffffffffff81111561058b57600080fd5b61059784828501610453565b949350505050565b6000806000606084860312156105b457600080fd5b833567ffffffffffffffff808211156105cc57600080fd5b6105d887838801610453565b9450602086013591508082111561052957600080fd5b6000825160005b8181101561060f57602081860181015185830152016105f5565b8181111561061e576000828501525b509190910192915050565b600181811c9082168061063d57607f821691505b60208210810361065d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c91508083168061069557607f831692505b602080841082036106b457634e487b7160e01b86526022600452602486fd5b8180156106c857600181146106d957610706565b60ff19861689528489019650610706565b60008a81526020902060005b868110156106fe5781548b8201529085019083016106e5565b505084890196505b509498975050505050505050565b60006001820161073457634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212205028015efce36e858ca3b92b32ffa6e9d637408e5f6c732c9e8d70eba09d6ea064736f6c634300080e0033",
  "deployedSourceMap": "111:1394:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:193;;;;;;:::i;:::-;;:::i;:::-;;803:386;;;;;;:::i;:::-;;:::i;522:208::-;;;;;;:::i;:::-;;:::i;1310:193::-;1436:14;:20;1451:4;-1:-1:-1;;;;;1436:20:2;-1:-1:-1;;;;;1436:20:2;;;;;;;;;;;;1462:33;;;;;;;;1467:8;1476:4;1467:14;;;;;;:::i;:::-;;;;;;;;;;;;;1462:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1462:33:2;;;-1:-1:-1;;1462:33:2;;;;;;;;;;;;;;1436:60;;;;;;;-1:-1:-1;1436:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1436:60:2;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1436:60:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1310:193;;;:::o;803:386::-;859:9;878:305;903:10;894:20;;;;:8;:20;;;;;:27;890:31;;878:305;;;1052:10;1043:20;;;;:8;:20;;;;;:23;;1064:1;;1043:23;;;;;;:::i;:::-;;;;;;;;;;;:27;;1026:45;;;;;;;;:::i;:::-;;;;;;;;;;;;;1016:56;;;;;;990:4;973:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;963:33;;;;;;:109;942:231;;1121:10;1112:20;;;;:8;:20;;;;;:23;;1133:1;;1112:23;;;;;;:::i;:::-;;;;;;;;;;;;;;1105:30;1112:23;;1105:30;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;849:340;803:386;:::o;942:231::-;923:3;;;;:::i;:::-;;;;878:305;;;849:340;803:386;:::o;522:208::-;661:4;644:8;653:4;644:14;;;;;;:::i;:::-;;;;;;;;;;;;;:21;;;;;;;;;;;;:::i;:::-;-1:-1:-1;684:10:2;675:20;;;;:8;:20;;;;;;;;701:21;;;;;;;;;;;;;;;;;;;;;;675:48;;;;;;;;;;;;;;;;;;701:21;;675:48;;;;;;;;;;;;;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:719;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;296:6;283:20;322:18;359:2;355;352:10;349:36;;;365:18;;:::i;:::-;440:2;434:9;408:2;494:13;;-1:-1:-1;;490:22:3;;;514:2;486:31;482:40;470:53;;;538:18;;;558:22;;;535:46;532:72;;;584:18;;:::i;:::-;624:10;620:2;613:22;659:2;651:6;644:18;705:3;698:4;693:2;685:6;681:15;677:26;674:35;671:55;;;722:1;719;712:12;671:55;786:2;779:4;771:6;767:17;760:4;752:6;748:17;735:54;833:1;826:4;821:2;813:6;809:15;805:26;798:37;853:6;844:15;;;;;;146:719;;;;:::o;870:717::-;967:6;975;983;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;1078:23;;-1:-1:-1;;;;;1130:31:3;;1120:42;;1110:70;;1176:1;1173;1166:12;1110:70;1199:5;-1:-1:-1;1255:2:3;1240:18;;1227:32;1278:18;1308:14;;;1305:34;;;1335:1;1332;1325:12;1305:34;1358:50;1400:7;1391:6;1380:9;1376:22;1358:50;:::i;:::-;1348:60;;1461:2;1450:9;1446:18;1433:32;1417:48;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:52;1573:7;1562:8;1551:9;1547:24;1529:52;:::i;:::-;1519:62;;;870:717;;;;;:::o;1592:322::-;1661:6;1714:2;1702:9;1693:7;1689:23;1685:32;1682:52;;;1730:1;1727;1720:12;1682:52;1770:9;1757:23;1803:18;1795:6;1792:30;1789:50;;;1835:1;1832;1825:12;1789:50;1858;1900:7;1891:6;1880:9;1876:22;1858:50;:::i;:::-;1848:60;1592:322;-1:-1:-1;;;;1592:322:3:o;1919:743::-;2026:6;2034;2042;2095:2;2083:9;2074:7;2070:23;2066:32;2063:52;;;2111:1;2108;2101:12;2063:52;2151:9;2138:23;2180:18;2221:2;2213:6;2210:14;2207:34;;;2237:1;2234;2227:12;2207:34;2260:50;2302:7;2293:6;2282:9;2278:22;2260:50;:::i;:::-;2250:60;;2363:2;2352:9;2348:18;2335:32;2319:48;;2392:2;2382:8;2379:16;2376:36;;;2408:1;2405;2398:12;2667:428;2798:3;2836:6;2830:13;2861:1;2871:129;2885:6;2882:1;2879:13;2871:129;;;2983:4;2967:14;;;2963:25;;2957:32;2944:11;;;2937:53;2900:12;2871:129;;;3018:6;3015:1;3012:13;3009:48;;;3053:1;3044:6;3039:3;3035:16;3028:27;3009:48;-1:-1:-1;3073:16:3;;;;;2667:428;-1:-1:-1;;2667:428:3:o;3100:380::-;3179:1;3175:12;;;;3222;;;3243:61;;3297:4;3289:6;3285:17;3275:27;;3243:61;3350:2;3342:6;3339:14;3319:18;3316:38;3313:161;;3396:10;3391:3;3387:20;3384:1;3377:31;3431:4;3428:1;3421:15;3459:4;3456:1;3449:15;3313:161;;3100:380;;;:::o;3485:127::-;3546:10;3541:3;3537:20;3534:1;3527:31;3577:4;3574:1;3567:15;3601:4;3598:1;3591:15;3743:1099;3871:3;3900:1;3933:6;3927:13;3963:3;3985:1;4013:9;4009:2;4005:18;3995:28;;4073:2;4062:9;4058:18;4095;4085:61;;4139:4;4131:6;4127:17;4117:27;;4085:61;4165:2;4213;4205:6;4202:14;4182:18;4179:38;4176:165;;-1:-1:-1;;;4240:33:3;;4296:4;4293:1;4286:15;4326:4;4247:3;4314:17;4176:165;4357:18;4384:104;;;;4502:1;4497:320;;;;4350:467;;4384:104;-1:-1:-1;;4417:24:3;;4405:37;;4462:16;;;;-1:-1:-1;4384:104:3;;4497:320;3690:1;3683:14;;;3727:4;3714:18;;4592:1;4606:165;4620:6;4617:1;4614:13;4606:165;;;4698:14;;4685:11;;;4678:35;4741:16;;;;4635:10;;4606:165;;;4610:3;;4800:6;4795:3;4791:16;4784:23;;4350:467;-1:-1:-1;4833:3:3;;3743:1099;-1:-1:-1;;;;;;;;3743:1099:3:o;4847:232::-;4886:3;4907:17;;;4904:140;;4966:10;4961:3;4957:20;4954:1;4947:31;5001:4;4998:1;4991:15;5029:4;5026:1;5019:15;4904:140;-1:-1:-1;5071:1:3;5060:13;;4847:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    111,
    1505
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x113607C4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5D808B61 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x9754E731 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x81 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x59 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x59F JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xDA SWAP1 PUSH2 0x629 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x106 SWAP1 PUSH2 0x629 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x153 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x128 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x153 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x136 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x20 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD DUP5 SWAP1 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP4 SWAP5 PUSH1 0x3 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x196 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x367 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x1AF SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x367 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1CB SWAP2 PUSH1 0x2 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x367 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x2E0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x20E JUMPI PUSH2 0x20E PUSH2 0x663 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2CE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x292 JUMPI PUSH2 0x292 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 PUSH2 0x2AC DUP3 DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x2BA PUSH1 0x1 DUP4 ADD PUSH1 0x0 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x2C8 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x3EB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2D8 DUP2 PUSH2 0x714 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x5EE JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x316 SWAP3 SWAP2 SWAP1 PUSH2 0x367 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP7 DUP2 MSTORE DUP1 DUP5 ADD DUP9 SWAP1 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP5 PUSH1 0x3 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x196 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x373 SWAP1 PUSH2 0x629 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x395 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3DB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3AE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3DB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3DB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3DB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3C0 JUMP JUMPDEST POP PUSH2 0x3E7 SWAP3 SWAP2 POP PUSH2 0x428 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x3F7 SWAP1 PUSH2 0x629 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x407 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x429 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x47F JUMPI PUSH2 0x47F PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x43D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x535 DUP8 DUP4 DUP9 ADD PUSH2 0x453 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 DUP7 DUP3 DUP8 ADD PUSH2 0x453 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x597 DUP5 DUP3 DUP6 ADD PUSH2 0x453 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D8 DUP8 DUP4 DUP9 ADD PUSH2 0x453 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x60F JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x5F5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x63D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x65D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x695 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 SUB PUSH2 0x6B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x6C8 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x6D9 JUMPI PUSH2 0x706 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x706 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x6FE JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x6E5 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x734 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x28 ADD 0x5E 0xFC 0xE3 PUSH15 0x858CA3B92B32FFA6E9D637408E5F6C PUSH20 0x2C9E8D70EBA09D6EA064736F6C634300080E0033 ",
  "pcMap": {
    "0": {
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x113607C4"
    },
    "38": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5D808B61"
    },
    "49": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9754E731"
    },
    "60": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E"
    },
    "64": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "DUP1",
      "path": "2"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        111,
        1505
      ],
      "op": "REVERT",
      "path": "2"
    },
    "70": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "71": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "74": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54"
    },
    "77": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "78": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "80": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E0"
    },
    "83": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMP",
      "path": "2"
    },
    "84": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "85": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81"
    },
    "88": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMP",
      "path": "2"
    },
    "89": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "90": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "STOP",
      "path": "2"
    },
    "91": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "92": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "95": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69"
    },
    "98": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "99": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "101": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x562"
    },
    "104": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        803,
        1189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "105": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "106": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D3"
    },
    "109": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        803,
        1189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "110": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "111": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "114": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C"
    },
    "117": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "118": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "120": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59F"
    },
    "123": {
      "fn": "privateupload.addcid",
      "jump": "i",
      "offset": [
        522,
        730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "124": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "125": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E4"
    },
    "128": {
      "fn": "privateupload.addcid",
      "jump": "i",
      "offset": [
        522,
        730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "129": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "130": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x3"
    },
    "132": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "134": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1451,
        1455
      ],
      "op": "DUP5",
      "path": "2"
    },
    "135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "141": {
      "op": "SHL"
    },
    "142": {
      "op": "SUB"
    },
    "143": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "AND",
      "path": "2"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "150": {
      "op": "SHL"
    },
    "151": {
      "op": "SUB"
    },
    "152": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "AND",
      "path": "2"
    },
    "153": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "154": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "155": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "157": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "ADD",
      "path": "2"
    },
    "158": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "159": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "160": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "161": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "163": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "ADD",
      "path": "2"
    },
    "164": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "166": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1456
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "167": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "169": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "170": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "171": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "173": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "174": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "176": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "177": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "178": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1475
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "180": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1476,
        1480
      ],
      "op": "DUP6",
      "path": "2"
    },
    "181": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "183": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "184": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1"
    },
    "187": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "188": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "189": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EE"
    },
    "192": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1467,
        1481
      ],
      "op": "JUMP",
      "path": "2"
    },
    "193": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "194": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "195": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "DUP2",
      "path": "2"
    },
    "196": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "197": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "199": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "ADD",
      "path": "2"
    },
    "200": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "202": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "203": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "DUP1",
      "path": "2"
    },
    "204": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "205": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SUB",
      "path": "2"
    },
    "206": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "207": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1467,
        1481
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "208": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "209": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "210": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA"
    },
    "213": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "214": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x629"
    },
    "217": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "218": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "219": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "220": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "222": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "223": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "225": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "226": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "227": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DIV",
      "path": "2"
    },
    "228": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MUL",
      "path": "2"
    },
    "229": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "231": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "232": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "234": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "235": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "236": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "237": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "238": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "240": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "241": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "242": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "243": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "244": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "245": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "246": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "247": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "248": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "250": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "251": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "252": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "253": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "254": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x106"
    },
    "257": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "258": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x629"
    },
    "261": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "262": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "263": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "264": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "265": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153"
    },
    "268": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "269": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "270": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "272": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "LT",
      "path": "2"
    },
    "273": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128"
    },
    "276": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "277": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "280": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "281": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "282": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "283": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DIV",
      "path": "2"
    },
    "284": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MUL",
      "path": "2"
    },
    "285": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "286": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "287": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "288": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "290": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "291": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "292": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153"
    },
    "295": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMP",
      "path": "2"
    },
    "296": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "297": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "298": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "299": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "300": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "301": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "303": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "304": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "306": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "308": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "309": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "310": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "312": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "313": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "314": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "315": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "316": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "318": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "319": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "320": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "322": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "323": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "324": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "325": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "GT",
      "path": "2"
    },
    "326": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "329": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "330": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "331": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "332": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SUB",
      "path": "2"
    },
    "333": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "335": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "AND",
      "path": "2"
    },
    "336": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "337": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "338": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "339": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "op": "POP"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "344": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "345": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "op": "POP"
    },
    "348": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "350": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "351": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "352": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "353": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP7",
      "path": "2"
    },
    "354": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "355": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "356": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "358": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "359": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "360": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "ADD",
      "path": "2"
    },
    "361": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "DUP5",
      "path": "2"
    },
    "362": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "363": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1462,
        1495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "364": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "365": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "366": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "368": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "369": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "370": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP5",
      "path": "2"
    },
    "371": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "374": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "375": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP5",
      "path": "2"
    },
    "376": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "377": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "378": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "379": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "380": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "381": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "382": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "383": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "384": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "385": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "386": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "387": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "389": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MUL",
      "path": "2"
    },
    "390": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "391": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "392": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "393": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "394": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x196"
    },
    "397": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "398": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP5",
      "path": "2"
    },
    "399": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "400": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "401": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "402": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367"
    },
    "405": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "406": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "407": {
      "op": "POP"
    },
    "408": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "410": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "411": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "412": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "413": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "414": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "415": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "416": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF"
    },
    "419": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "420": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "422": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP6",
      "path": "2"
    },
    "423": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "424": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "425": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "426": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "427": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367"
    },
    "430": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "431": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "435": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP3",
      "path": "2"
    },
    "436": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "437": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "438": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "439": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "440": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "443": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "444": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "446": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "DUP5",
      "path": "2"
    },
    "447": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "448": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "449": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "451": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "452": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "453": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "ADD",
      "path": "2"
    },
    "454": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "455": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367"
    },
    "458": {
      "fn": "privateupload.sharewithother",
      "jump": "i",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "459": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "POP",
      "path": "2"
    },
    "461": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "POP",
      "path": "2"
    },
    "462": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1436,
        1496
      ],
      "op": "POP",
      "path": "2"
    },
    "463": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "POP",
      "path": "2"
    },
    "464": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "POP",
      "path": "2"
    },
    "465": {
      "fn": "privateupload.sharewithother",
      "offset": [
        1310,
        1503
      ],
      "op": "POP",
      "path": "2"
    },
    "466": {
      "fn": "privateupload.sharewithother",
      "jump": "o",
      "offset": [
        1310,
        1503
      ],
      "op": "JUMP",
      "path": "2"
    },
    "467": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "468": {
      "fn": "privateupload.removecid",
      "offset": [
        859,
        868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "470": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "471": {
      "fn": "privateupload.removecid",
      "offset": [
        903,
        913
      ],
      "op": "CALLER",
      "path": "2"
    },
    "472": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "474": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "475": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "476": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "477": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "479": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "481": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "482": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "484": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "485": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        914
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "486": {
      "fn": "privateupload.removecid",
      "offset": [
        894,
        921
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "487": {
      "fn": "privateupload.removecid",
      "offset": [
        890,
        921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "488": {
      "fn": "privateupload.removecid",
      "offset": [
        890,
        921
      ],
      "op": "LT",
      "path": "2"
    },
    "489": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "490": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "493": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "494": {
      "fn": "privateupload.removecid",
      "offset": [
        1052,
        1062
      ],
      "op": "CALLER",
      "path": "2"
    },
    "495": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "497": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "498": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "499": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "500": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "502": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "504": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "505": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "507": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "508": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1063
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "509": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "DUP1",
      "path": "2"
    },
    "510": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "511": {
      "fn": "privateupload.removecid",
      "offset": [
        1064,
        1065
      ],
      "op": "DUP3",
      "path": "2"
    },
    "512": {
      "fn": "privateupload.removecid",
      "offset": [
        1064,
        1065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "513": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "514": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "LT",
      "path": "2"
    },
    "515": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E"
    },
    "518": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "519": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E"
    },
    "522": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x663"
    },
    "525": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1043,
        1066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "526": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "527": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "528": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "530": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "531": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "533": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "535": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "536": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "537": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "539": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "MUL",
      "path": "2"
    },
    "540": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1066
      ],
      "op": "ADD",
      "path": "2"
    },
    "541": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "543": {
      "fn": "privateupload.removecid",
      "offset": [
        1043,
        1070
      ],
      "op": "ADD",
      "path": "2"
    },
    "544": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "546": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "547": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "549": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "ADD",
      "path": "2"
    },
    "550": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22F"
    },
    "553": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "554": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "555": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x679"
    },
    "558": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1026,
        1071
      ],
      "op": "JUMP",
      "path": "2"
    },
    "559": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "560": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "562": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "563": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "565": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "DUP2",
      "path": "2"
    },
    "566": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "DUP4",
      "path": "2"
    },
    "567": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "SUB",
      "path": "2"
    },
    "568": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "SUB",
      "path": "2"
    },
    "569": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "DUP2",
      "path": "2"
    },
    "570": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "571": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "572": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "574": {
      "fn": "privateupload.removecid",
      "offset": [
        1026,
        1071
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "575": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "DUP1",
      "path": "2"
    },
    "576": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "577": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "578": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "580": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "ADD",
      "path": "2"
    },
    "581": {
      "fn": "privateupload.removecid",
      "offset": [
        1016,
        1072
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "582": {
      "fn": "privateupload.removecid",
      "offset": [
        990,
        994
      ],
      "op": "DUP3",
      "path": "2"
    },
    "583": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "585": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "586": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "588": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "ADD",
      "path": "2"
    },
    "589": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x256"
    },
    "592": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "593": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "594": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EE"
    },
    "597": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        973,
        995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "598": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "599": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "601": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "602": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "604": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "605": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "DUP4",
      "path": "2"
    },
    "606": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "SUB",
      "path": "2"
    },
    "607": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "SUB",
      "path": "2"
    },
    "608": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "609": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "610": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "611": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "613": {
      "fn": "privateupload.removecid",
      "offset": [
        973,
        995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "614": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "DUP1",
      "path": "2"
    },
    "615": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "616": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "617": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "619": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "ADD",
      "path": "2"
    },
    "620": {
      "fn": "privateupload.removecid",
      "offset": [
        963,
        996
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "621": {
      "branch": 5,
      "fn": "privateupload.removecid",
      "offset": [
        963,
        1072
      ],
      "op": "SUB",
      "path": "2"
    },
    "622": {
      "fn": "privateupload.removecid",
      "offset": [
        942,
        1173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE"
    },
    "625": {
      "branch": 5,
      "fn": "privateupload.removecid",
      "offset": [
        942,
        1173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "626": {
      "fn": "privateupload.removecid",
      "offset": [
        1121,
        1131
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 1
    },
    "627": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "629": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "630": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "631": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "632": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "634": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "636": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "637": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "639": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "640": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1132
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "641": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP1",
      "path": "2"
    },
    "642": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "643": {
      "fn": "privateupload.removecid",
      "offset": [
        1133,
        1134
      ],
      "op": "DUP3",
      "path": "2"
    },
    "644": {
      "fn": "privateupload.removecid",
      "offset": [
        1133,
        1134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "645": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "646": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "LT",
      "path": "2"
    },
    "647": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "650": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "651": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "654": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x663"
    },
    "657": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1112,
        1135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "658": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "659": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "661": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "662": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "663": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "664": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "666": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "667": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "668": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "670": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "671": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "672": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "MUL",
      "path": "2"
    },
    "673": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "ADD",
      "path": "2"
    },
    "674": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "675": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC"
    },
    "678": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "679": {
      "fn": "privateupload.removecid",
      "offset": [
        1112,
        1135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "680": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "683": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "684": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "685": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA"
    },
    "688": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "690": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "DUP4",
      "path": "2"
    },
    "691": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "ADD",
      "path": "2"
    },
    "692": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "694": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "697": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "698": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "699": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C8"
    },
    "702": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "704": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "DUP4",
      "path": "2"
    },
    "705": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "ADD",
      "path": "2"
    },
    "706": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "708": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EB"
    },
    "711": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "712": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "713": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "POP",
      "path": "2"
    },
    "714": {
      "fn": "privateupload.removecid",
      "offset": [
        1105,
        1135
      ],
      "op": "POP",
      "path": "2"
    },
    "715": {
      "fn": "privateupload.removecid",
      "offset": [
        849,
        1189
      ],
      "op": "POP",
      "path": "2"
    },
    "716": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "POP",
      "path": "2"
    },
    "717": {
      "fn": "privateupload.removecid",
      "jump": "o",
      "offset": [
        803,
        1189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "718": {
      "fn": "privateupload.removecid",
      "offset": [
        942,
        1173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "719": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 2
    },
    "720": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8"
    },
    "723": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "DUP2",
      "path": "2"
    },
    "724": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x714"
    },
    "727": {
      "fn": "privateupload.removecid",
      "jump": "i",
      "offset": [
        923,
        926
      ],
      "op": "JUMP",
      "path": "2"
    },
    "728": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "729": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "730": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "POP",
      "path": "2"
    },
    "731": {
      "fn": "privateupload.removecid",
      "offset": [
        923,
        926
      ],
      "op": "POP",
      "path": "2"
    },
    "732": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D6"
    },
    "735": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "JUMP",
      "path": "2"
    },
    "736": {
      "fn": "privateupload.removecid",
      "offset": [
        878,
        1183
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "fn": "privateupload.removecid",
      "offset": [
        849,
        1189
      ],
      "op": "POP",
      "path": "2"
    },
    "738": {
      "fn": "privateupload.removecid",
      "offset": [
        803,
        1189
      ],
      "op": "POP",
      "path": "2"
    },
    "739": {
      "fn": "privateupload.removecid",
      "jump": "o",
      "offset": [
        803,
        1189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "740": {
      "fn": "privateupload.addcid",
      "offset": [
        522,
        730
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "741": {
      "fn": "privateupload.addcid",
      "offset": [
        661,
        665
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 3
    },
    "742": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "744": {
      "fn": "privateupload.addcid",
      "offset": [
        653,
        657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "745": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "747": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "748": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F5"
    },
    "751": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "752": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "753": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EE"
    },
    "756": {
      "fn": "privateupload.addcid",
      "jump": "i",
      "offset": [
        644,
        658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "757": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "758": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "759": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "DUP2",
      "path": "2"
    },
    "760": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "761": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "763": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "ADD",
      "path": "2"
    },
    "764": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "766": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "767": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "768": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "769": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SUB",
      "path": "2"
    },
    "770": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "771": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        658
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "772": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "773": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "774": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "775": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "776": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "778": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "ADD",
      "path": "2"
    },
    "779": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "780": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316"
    },
    "783": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "784": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "785": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "786": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367"
    },
    "789": {
      "fn": "privateupload.addcid",
      "jump": "i",
      "offset": [
        644,
        665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "790": {
      "fn": "privateupload.addcid",
      "offset": [
        644,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "791": {
      "op": "POP"
    },
    "792": {
      "fn": "privateupload.addcid",
      "offset": [
        684,
        694
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 4
    },
    "793": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "795": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "796": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "797": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "798": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "800": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "802": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "803": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "804": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "805": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "807": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "DUP1",
      "path": "2"
    },
    "808": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "DUP4",
      "path": "2"
    },
    "809": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        695
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "810": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "811": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "812": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "814": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "815": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "ADD",
      "path": "2"
    },
    "816": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP4",
      "path": "2"
    },
    "817": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "818": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP7",
      "path": "2"
    },
    "819": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "820": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "821": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP1",
      "path": "2"
    },
    "822": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP5",
      "path": "2"
    },
    "823": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "ADD",
      "path": "2"
    },
    "824": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP9",
      "path": "2"
    },
    "825": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "826": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "827": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "828": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP3",
      "path": "2"
    },
    "829": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "ADD",
      "path": "2"
    },
    "830": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "DUP6",
      "path": "2"
    },
    "831": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "832": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "833": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP1",
      "path": "2"
    },
    "834": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "835": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "837": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP2",
      "path": "2"
    },
    "838": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "ADD",
      "path": "2"
    },
    "839": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP3",
      "path": "2"
    },
    "840": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "841": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP5",
      "path": "2"
    },
    "843": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "844": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "845": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP3",
      "path": "2"
    },
    "846": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "847": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "848": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP2",
      "path": "2"
    },
    "849": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "850": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP1",
      "path": "2"
    },
    "851": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "852": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "853": {
      "fn": "privateupload.addcid",
      "offset": [
        701,
        722
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "854": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "856": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "MUL",
      "path": "2"
    },
    "857": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "858": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "859": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "ADD",
      "path": "2"
    },
    "860": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "861": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x196"
    },
    "864": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "865": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "DUP5",
      "path": "2"
    },
    "866": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "867": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "868": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "869": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "ADD",
      "path": "2"
    },
    "870": {
      "fn": "privateupload.addcid",
      "offset": [
        675,
        723
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "871": {
      "op": "JUMPDEST"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "DUP1"
    },
    "874": {
      "op": "SLOAD"
    },
    "875": {
      "op": "PUSH2",
      "value": "0x373"
    },
    "878": {
      "op": "SWAP1"
    },
    "879": {
      "op": "PUSH2",
      "value": "0x629"
    },
    "882": {
      "jump": "i",
      "op": "JUMP"
    },
    "883": {
      "op": "JUMPDEST"
    },
    "884": {
      "op": "SWAP1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "887": {
      "op": "MSTORE"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "892": {
      "op": "KECCAK256"
    },
    "893": {
      "op": "SWAP1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "899": {
      "op": "SWAP1"
    },
    "900": {
      "op": "DIV"
    },
    "901": {
      "op": "DUP2"
    },
    "902": {
      "op": "ADD"
    },
    "903": {
      "op": "SWAP3"
    },
    "904": {
      "op": "DUP3"
    },
    "905": {
      "op": "PUSH2",
      "value": "0x395"
    },
    "908": {
      "op": "JUMPI"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "911": {
      "op": "DUP6"
    },
    "912": {
      "op": "SSTORE"
    },
    "913": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "916": {
      "op": "JUMP"
    },
    "917": {
      "op": "JUMPDEST"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "921": {
      "op": "LT"
    },
    "922": {
      "op": "PUSH2",
      "value": "0x3AE"
    },
    "925": {
      "op": "JUMPI"
    },
    "926": {
      "op": "DUP1"
    },
    "927": {
      "op": "MLOAD"
    },
    "928": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "930": {
      "op": "NOT"
    },
    "931": {
      "op": "AND"
    },
    "932": {
      "op": "DUP4"
    },
    "933": {
      "op": "DUP1"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "OR"
    },
    "936": {
      "op": "DUP6"
    },
    "937": {
      "op": "SSTORE"
    },
    "938": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "941": {
      "op": "JUMP"
    },
    "942": {
      "op": "JUMPDEST"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "DUP1"
    },
    "945": {
      "op": "ADD"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "ADD"
    },
    "949": {
      "op": "DUP6"
    },
    "950": {
      "op": "SSTORE"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ISZERO"
    },
    "953": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "956": {
      "op": "JUMPI"
    },
    "957": {
      "op": "SWAP2"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "JUMPDEST"
    },
    "961": {
      "op": "DUP3"
    },
    "962": {
      "op": "DUP2"
    },
    "963": {
      "op": "GT"
    },
    "964": {
      "op": "ISZERO"
    },
    "965": {
      "op": "PUSH2",
      "value": "0x3DB"
    },
    "968": {
      "op": "JUMPI"
    },
    "969": {
      "op": "DUP3"
    },
    "970": {
      "op": "MLOAD"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "SSTORE"
    },
    "973": {
      "op": "SWAP2"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "976": {
      "op": "ADD"
    },
    "977": {
      "op": "SWAP2"
    },
    "978": {
      "op": "SWAP1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "op": "SWAP1"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3C0"
    },
    "986": {
      "op": "JUMP"
    },
    "987": {
      "op": "JUMPDEST"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "992": {
      "op": "SWAP3"
    },
    "993": {
      "op": "SWAP2"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "998": {
      "jump": "i",
      "op": "JUMP"
    },
    "999": {
      "op": "JUMPDEST"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "SWAP1"
    },
    "1002": {
      "jump": "o",
      "op": "JUMP"
    },
    "1003": {
      "op": "JUMPDEST"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "DUP1"
    },
    "1006": {
      "op": "SLOAD"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3F7"
    },
    "1010": {
      "op": "SWAP1"
    },
    "1011": {
      "op": "PUSH2",
      "value": "0x629"
    },
    "1014": {
      "jump": "i",
      "op": "JUMP"
    },
    "1015": {
      "op": "JUMPDEST"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1018": {
      "op": "DUP3"
    },
    "1019": {
      "op": "SSTORE"
    },
    "1020": {
      "op": "DUP1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1023": {
      "op": "LT"
    },
    "1024": {
      "op": "PUSH2",
      "value": "0x407"
    },
    "1027": {
      "op": "JUMPI"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "jump": "o",
      "op": "JUMP"
    },
    "1031": {
      "op": "JUMPDEST"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "DIV"
    },
    "1039": {
      "op": "SWAP1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1047": {
      "op": "KECCAK256"
    },
    "1048": {
      "op": "SWAP1"
    },
    "1049": {
      "op": "DUP2"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "op": "SWAP1"
    },
    "1052": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1055": {
      "op": "SWAP2"
    },
    "1056": {
      "op": "SWAP1"
    },
    "1057": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "1060": {
      "jump": "i",
      "op": "JUMP"
    },
    "1061": {
      "op": "JUMPDEST"
    },
    "1062": {
      "op": "POP"
    },
    "1063": {
      "jump": "o",
      "op": "JUMP"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "JUMPDEST"
    },
    "1066": {
      "op": "DUP1"
    },
    "1067": {
      "op": "DUP3"
    },
    "1068": {
      "op": "GT"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x3E7"
    },
    "1073": {
      "op": "JUMPI"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1076": {
      "op": "DUP2"
    },
    "1077": {
      "op": "SSTORE"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "PUSH2",
      "value": "0x429"
    },
    "1084": {
      "op": "JUMP"
    },
    "1085": {
      "op": "JUMPDEST"
    },
    "1086": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "MSTORE"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1101": {
      "op": "MSTORE"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1106": {
      "op": "REVERT"
    },
    "1107": {
      "op": "JUMPDEST"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1113": {
      "op": "DUP4"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "SLT"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1119": {
      "op": "JUMPI"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "REVERT"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "op": "DUP2"
    },
    "1126": {
      "op": "CALLDATALOAD"
    },
    "1127": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1136": {
      "op": "DUP1"
    },
    "1137": {
      "op": "DUP3"
    },
    "1138": {
      "op": "GT"
    },
    "1139": {
      "op": "ISZERO"
    },
    "1140": {
      "op": "PUSH2",
      "value": "0x47F"
    },
    "1143": {
      "op": "JUMPI"
    },
    "1144": {
      "op": "PUSH2",
      "value": "0x47F"
    },
    "1147": {
      "op": "PUSH2",
      "value": "0x43D"
    },
    "1150": {
      "jump": "i",
      "op": "JUMP"
    },
    "1151": {
      "op": "JUMPDEST"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1154": {
      "op": "MLOAD"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1157": {
      "op": "DUP4"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1161": {
      "op": "NOT"
    },
    "1162": {
      "op": "SWAP1"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "AND"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "op": "AND"
    },
    "1169": {
      "op": "DUP2"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "op": "SWAP1"
    },
    "1172": {
      "op": "DUP3"
    },
    "1173": {
      "op": "DUP3"
    },
    "1174": {
      "op": "GT"
    },
    "1175": {
      "op": "DUP2"
    },
    "1176": {
      "op": "DUP4"
    },
    "1177": {
      "op": "LT"
    },
    "1178": {
      "op": "OR"
    },
    "1179": {
      "op": "ISZERO"
    },
    "1180": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1183": {
      "op": "JUMPI"
    },
    "1184": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x43D"
    },
    "1190": {
      "jump": "i",
      "op": "JUMP"
    },
    "1191": {
      "op": "JUMPDEST"
    },
    "1192": {
      "op": "DUP2"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1195": {
      "op": "MSTORE"
    },
    "1196": {
      "op": "DUP4"
    },
    "1197": {
      "op": "DUP2"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "DUP7"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1202": {
      "op": "DUP6"
    },
    "1203": {
      "op": "DUP9"
    },
    "1204": {
      "op": "ADD"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "op": "GT"
    },
    "1207": {
      "op": "ISZERO"
    },
    "1208": {
      "op": "PUSH2",
      "value": "0x4C0"
    },
    "1211": {
      "op": "JUMPI"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1214": {
      "op": "DUP1"
    },
    "1215": {
      "op": "REVERT"
    },
    "1216": {
      "op": "JUMPDEST"
    },
    "1217": {
      "op": "DUP4"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "op": "DUP8"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1224": {
      "op": "DUP4"
    },
    "1225": {
      "op": "ADD"
    },
    "1226": {
      "op": "CALLDATACOPY"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1231": {
      "op": "DUP6"
    },
    "1232": {
      "op": "DUP4"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "DUP1"
    },
    "1237": {
      "op": "SWAP5"
    },
    "1238": {
      "op": "POP"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "op": "POP"
    },
    "1241": {
      "op": "POP"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "op": "SWAP3"
    },
    "1244": {
      "op": "SWAP2"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "jump": "o",
      "op": "JUMP"
    },
    "1248": {
      "op": "JUMPDEST"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1251": {
      "op": "DUP1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1256": {
      "op": "DUP5"
    },
    "1257": {
      "op": "DUP7"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "op": "SLT"
    },
    "1260": {
      "op": "ISZERO"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x4F5"
    },
    "1264": {
      "op": "JUMPI"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "REVERT"
    },
    "1269": {
      "op": "JUMPDEST"
    },
    "1270": {
      "op": "DUP4"
    },
    "1271": {
      "op": "CALLDATALOAD"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "AND"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "EQ"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x50C"
    },
    "1287": {
      "op": "JUMPI"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1290": {
      "op": "DUP1"
    },
    "1291": {
      "op": "REVERT"
    },
    "1292": {
      "op": "JUMPDEST"
    },
    "1293": {
      "op": "SWAP3"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1297": {
      "op": "DUP5"
    },
    "1298": {
      "op": "ADD"
    },
    "1299": {
      "op": "CALLDATALOAD"
    },
    "1300": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1309": {
      "op": "DUP1"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "GT"
    },
    "1312": {
      "op": "ISZERO"
    },
    "1313": {
      "op": "PUSH2",
      "value": "0x529"
    },
    "1316": {
      "op": "JUMPI"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1319": {
      "op": "DUP1"
    },
    "1320": {
      "op": "REVERT"
    },
    "1321": {
      "op": "JUMPDEST"
    },
    "1322": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1325": {
      "op": "DUP8"
    },
    "1326": {
      "op": "DUP4"
    },
    "1327": {
      "op": "DUP9"
    },
    "1328": {
      "op": "ADD"
    },
    "1329": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1332": {
      "jump": "i",
      "op": "JUMP"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "SWAP4"
    },
    "1335": {
      "op": "POP"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1338": {
      "op": "DUP7"
    },
    "1339": {
      "op": "ADD"
    },
    "1340": {
      "op": "CALLDATALOAD"
    },
    "1341": {
      "op": "SWAP2"
    },
    "1342": {
      "op": "POP"
    },
    "1343": {
      "op": "DUP1"
    },
    "1344": {
      "op": "DUP3"
    },
    "1345": {
      "op": "GT"
    },
    "1346": {
      "op": "ISZERO"
    },
    "1347": {
      "op": "PUSH2",
      "value": "0x54B"
    },
    "1350": {
      "op": "JUMPI"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1353": {
      "op": "DUP1"
    },
    "1354": {
      "op": "REVERT"
    },
    "1355": {
      "op": "JUMPDEST"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "op": "PUSH2",
      "value": "0x558"
    },
    "1360": {
      "op": "DUP7"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "DUP8"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1367": {
      "jump": "i",
      "op": "JUMP"
    },
    "1368": {
      "op": "JUMPDEST"
    },
    "1369": {
      "op": "SWAP2"
    },
    "1370": {
      "op": "POP"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "op": "SWAP3"
    },
    "1373": {
      "op": "POP"
    },
    "1374": {
      "op": "SWAP3"
    },
    "1375": {
      "op": "POP"
    },
    "1376": {
      "op": "SWAP3"
    },
    "1377": {
      "jump": "o",
      "op": "JUMP"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1383": {
      "op": "DUP3"
    },
    "1384": {
      "op": "DUP5"
    },
    "1385": {
      "op": "SUB"
    },
    "1386": {
      "op": "SLT"
    },
    "1387": {
      "op": "ISZERO"
    },
    "1388": {
      "op": "PUSH2",
      "value": "0x574"
    },
    "1391": {
      "op": "JUMPI"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1394": {
      "op": "DUP1"
    },
    "1395": {
      "op": "REVERT"
    },
    "1396": {
      "op": "JUMPDEST"
    },
    "1397": {
      "op": "DUP2"
    },
    "1398": {
      "op": "CALLDATALOAD"
    },
    "1399": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1408": {
      "op": "DUP2"
    },
    "1409": {
      "op": "GT"
    },
    "1410": {
      "op": "ISZERO"
    },
    "1411": {
      "op": "PUSH2",
      "value": "0x58B"
    },
    "1414": {
      "op": "JUMPI"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1417": {
      "op": "DUP1"
    },
    "1418": {
      "op": "REVERT"
    },
    "1419": {
      "op": "JUMPDEST"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x597"
    },
    "1423": {
      "op": "DUP5"
    },
    "1424": {
      "op": "DUP3"
    },
    "1425": {
      "op": "DUP6"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1430": {
      "jump": "i",
      "op": "JUMP"
    },
    "1431": {
      "op": "JUMPDEST"
    },
    "1432": {
      "op": "SWAP5"
    },
    "1433": {
      "op": "SWAP4"
    },
    "1434": {
      "op": "POP"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "jump": "o",
      "op": "JUMP"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1442": {
      "op": "DUP1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1447": {
      "op": "DUP5"
    },
    "1448": {
      "op": "DUP7"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "op": "SLT"
    },
    "1451": {
      "op": "ISZERO"
    },
    "1452": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1455": {
      "op": "JUMPI"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "op": "REVERT"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "DUP4"
    },
    "1462": {
      "op": "CALLDATALOAD"
    },
    "1463": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "GT"
    },
    "1475": {
      "op": "ISZERO"
    },
    "1476": {
      "op": "PUSH2",
      "value": "0x5CC"
    },
    "1479": {
      "op": "JUMPI"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "op": "DUP1"
    },
    "1483": {
      "op": "REVERT"
    },
    "1484": {
      "op": "JUMPDEST"
    },
    "1485": {
      "op": "PUSH2",
      "value": "0x5D8"
    },
    "1488": {
      "op": "DUP8"
    },
    "1489": {
      "op": "DUP4"
    },
    "1490": {
      "op": "DUP9"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "op": "PUSH2",
      "value": "0x453"
    },
    "1495": {
      "jump": "i",
      "op": "JUMP"
    },
    "1496": {
      "op": "JUMPDEST"
    },
    "1497": {
      "op": "SWAP5"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1501": {
      "op": "DUP7"
    },
    "1502": {
      "op": "ADD"
    },
    "1503": {
      "op": "CALLDATALOAD"
    },
    "1504": {
      "op": "SWAP2"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "op": "DUP1"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "GT"
    },
    "1509": {
      "op": "ISZERO"
    },
    "1510": {
      "op": "PUSH2",
      "value": "0x529"
    },
    "1513": {
      "op": "JUMPI"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1516": {
      "op": "DUP1"
    },
    "1517": {
      "op": "REVERT"
    },
    "1518": {
      "op": "JUMPDEST"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1521": {
      "op": "DUP3"
    },
    "1522": {
      "op": "MLOAD"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "JUMPDEST"
    },
    "1526": {
      "op": "DUP2"
    },
    "1527": {
      "op": "DUP2"
    },
    "1528": {
      "op": "LT"
    },
    "1529": {
      "op": "ISZERO"
    },
    "1530": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1533": {
      "op": "JUMPI"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1536": {
      "op": "DUP2"
    },
    "1537": {
      "op": "DUP7"
    },
    "1538": {
      "op": "ADD"
    },
    "1539": {
      "op": "DUP2"
    },
    "1540": {
      "op": "ADD"
    },
    "1541": {
      "op": "MLOAD"
    },
    "1542": {
      "op": "DUP6"
    },
    "1543": {
      "op": "DUP4"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x5F5"
    },
    "1550": {
      "op": "JUMP"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "DUP2"
    },
    "1553": {
      "op": "DUP2"
    },
    "1554": {
      "op": "GT"
    },
    "1555": {
      "op": "ISZERO"
    },
    "1556": {
      "op": "PUSH2",
      "value": "0x61E"
    },
    "1559": {
      "op": "JUMPI"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1562": {
      "op": "DUP3"
    },
    "1563": {
      "op": "DUP6"
    },
    "1564": {
      "op": "ADD"
    },
    "1565": {
      "op": "MSTORE"
    },
    "1566": {
      "op": "JUMPDEST"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "SWAP2"
    },
    "1569": {
      "op": "SWAP1"
    },
    "1570": {
      "op": "SWAP2"
    },
    "1571": {
      "op": "ADD"
    },
    "1572": {
      "op": "SWAP3"
    },
    "1573": {
      "op": "SWAP2"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "jump": "o",
      "op": "JUMP"
    },
    "1577": {
      "op": "JUMPDEST"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1580": {
      "op": "DUP2"
    },
    "1581": {
      "op": "DUP2"
    },
    "1582": {
      "op": "SHR"
    },
    "1583": {
      "op": "SWAP1"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "AND"
    },
    "1586": {
      "op": "DUP1"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x63D"
    },
    "1590": {
      "op": "JUMPI"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1593": {
      "op": "DUP3"
    },
    "1594": {
      "op": "AND"
    },
    "1595": {
      "op": "SWAP2"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "op": "JUMPDEST"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1600": {
      "op": "DUP3"
    },
    "1601": {
      "op": "LT"
    },
    "1602": {
      "op": "DUP2"
    },
    "1603": {
      "op": "SUB"
    },
    "1604": {
      "op": "PUSH2",
      "value": "0x65D"
    },
    "1607": {
      "op": "JUMPI"
    },
    "1608": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "MSTORE"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1628": {
      "op": "REVERT"
    },
    "1629": {
      "op": "JUMPDEST"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "op": "SWAP2"
    },
    "1632": {
      "op": "SWAP1"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "jump": "o",
      "op": "JUMP"
    },
    "1635": {
      "op": "JUMPDEST"
    },
    "1636": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1646": {
      "op": "MSTORE"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1651": {
      "op": "MSTORE"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "REVERT"
    },
    "1657": {
      "op": "JUMPDEST"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "DUP1"
    },
    "1661": {
      "op": "DUP4"
    },
    "1662": {
      "op": "SLOAD"
    },
    "1663": {
      "op": "DUP2"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "DUP2"
    },
    "1668": {
      "op": "SHR"
    },
    "1669": {
      "op": "SWAP2"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "op": "DUP1"
    },
    "1672": {
      "op": "DUP4"
    },
    "1673": {
      "op": "AND"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x695"
    },
    "1678": {
      "op": "JUMPI"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1681": {
      "op": "DUP4"
    },
    "1682": {
      "op": "AND"
    },
    "1683": {
      "op": "SWAP3"
    },
    "1684": {
      "op": "POP"
    },
    "1685": {
      "op": "JUMPDEST"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1688": {
      "op": "DUP1"
    },
    "1689": {
      "op": "DUP5"
    },
    "1690": {
      "op": "LT"
    },
    "1691": {
      "op": "DUP3"
    },
    "1692": {
      "op": "SUB"
    },
    "1693": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "1696": {
      "op": "JUMPI"
    },
    "1697": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "DUP7"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1714": {
      "op": "DUP7"
    },
    "1715": {
      "op": "REVERT"
    },
    "1716": {
      "op": "JUMPDEST"
    },
    "1717": {
      "op": "DUP2"
    },
    "1718": {
      "op": "DUP1"
    },
    "1719": {
      "op": "ISZERO"
    },
    "1720": {
      "op": "PUSH2",
      "value": "0x6C8"
    },
    "1723": {
      "op": "JUMPI"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "DUP2"
    },
    "1727": {
      "op": "EQ"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x6D9"
    },
    "1731": {
      "op": "JUMPI"
    },
    "1732": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1735": {
      "op": "JUMP"
    },
    "1736": {
      "op": "JUMPDEST"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1739": {
      "op": "NOT"
    },
    "1740": {
      "op": "DUP7"
    },
    "1741": {
      "op": "AND"
    },
    "1742": {
      "op": "DUP10"
    },
    "1743": {
      "op": "MSTORE"
    },
    "1744": {
      "op": "DUP5"
    },
    "1745": {
      "op": "DUP10"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "SWAP7"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "op": "PUSH2",
      "value": "0x706"
    },
    "1752": {
      "op": "JUMP"
    },
    "1753": {
      "op": "JUMPDEST"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1756": {
      "op": "DUP11"
    },
    "1757": {
      "op": "DUP2"
    },
    "1758": {
      "op": "MSTORE"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1761": {
      "op": "SWAP1"
    },
    "1762": {
      "op": "KECCAK256"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1765": {
      "op": "JUMPDEST"
    },
    "1766": {
      "op": "DUP7"
    },
    "1767": {
      "op": "DUP2"
    },
    "1768": {
      "op": "LT"
    },
    "1769": {
      "op": "ISZERO"
    },
    "1770": {
      "op": "PUSH2",
      "value": "0x6FE"
    },
    "1773": {
      "op": "JUMPI"
    },
    "1774": {
      "op": "DUP2"
    },
    "1775": {
      "op": "SLOAD"
    },
    "1776": {
      "op": "DUP12"
    },
    "1777": {
      "op": "DUP3"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "op": "SWAP1"
    },
    "1781": {
      "op": "DUP6"
    },
    "1782": {
      "op": "ADD"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "op": "DUP4"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0x6E5"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "op": "JUMPDEST"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "op": "POP"
    },
    "1793": {
      "op": "DUP5"
    },
    "1794": {
      "op": "DUP10"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "op": "SWAP7"
    },
    "1797": {
      "op": "POP"
    },
    "1798": {
      "op": "JUMPDEST"
    },
    "1799": {
      "op": "POP"
    },
    "1800": {
      "op": "SWAP5"
    },
    "1801": {
      "op": "SWAP9"
    },
    "1802": {
      "op": "SWAP8"
    },
    "1803": {
      "op": "POP"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "op": "POP"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "jump": "o",
      "op": "JUMP"
    },
    "1812": {
      "op": "JUMPDEST"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "DUP3"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "PUSH2",
      "value": "0x734"
    },
    "1822": {
      "op": "JUMPI"
    },
    "1823": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1830": {
      "op": "SHL"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1833": {
      "op": "MSTORE"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1838": {
      "op": "MSTORE"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1843": {
      "op": "REVERT"
    },
    "1844": {
      "op": "JUMPDEST"
    },
    "1845": {
      "op": "POP"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "ADD"
    },
    "1849": {
      "op": "SWAP1"
    },
    "1850": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f6adecf87d8350ac458dec598435d19fadc80dae",
  "source": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract privateupload {\n    struct File {\n        string name;\n        string CID;\n        string key;\n    }\n\n    //mapping (address=>mapping(bytes32=>string)[]) usercid;\n    mapping(address => string) publickey;\n    mapping(string => string) checkcid;\n    mapping(address => File[]) userscid;\n    mapping(address => File[]) sharedwithuser;\n\n    //add file cid and name(if only uploaded by the user alone)\n    function addcid(\n        string memory cids,\n        string memory name,\n        string memory key\n    ) public {\n        checkcid[cids] = name;\n        userscid[msg.sender].push(File(name, cids, key));\n    }\n\n    //remove any cid if user wants it removed from his file system\n    function removecid(string memory cids) public {\n        uint256 j;\n        for (j = 0; j < userscid[msg.sender].length; j++) {\n            if (\n                keccak256(abi.encodePacked(cids)) ==\n                keccak256(abi.encodePacked(userscid[msg.sender][j].CID))\n            ) {\n                delete userscid[msg.sender][j];\n                break;\n            }\n        }\n    }\n\n    //share file cid with other user, who wants it(add the file name and cid in other user shared with me section)\n    function sharewithother(\n        address user,\n        string memory cids,\n        string memory pekey\n    ) public {\n        sharedwithuser[user].push(File(checkcid[cids], cids, pekey));\n    }\n}\n",
  "sourceMap": "111:1394:2:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/PrivateUpload.sol",
  "type": "contract"
}